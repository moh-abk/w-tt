#name: TF plan and apply
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  terraform-plan:
#    name: 'Terraform Plan'
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push' || github.event_name != 'pull_request'
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@master
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@master
#        with:
#          aws-region: eu-west-1
#          role-to-assume: arn:aws:iam::166486374934:role/github-eu-west-1-prod
#
#      - name: Terraform Plan
#        continue-on-error: true
#        run: |
#          "${GITHUB_WORKSPACE}/terraform/infrastructure/aws/terraform.sh 166486374934 prod "eu-west-1" 01-public-website plan"
#
#      - name: Upload TF Plan
#        uses: actions/upload-artifact@v2
#        with:
#          name: tf_plan
#          path: "${GITHUB_WORKSPACE}/terraform/infrastructure/aws/166486374934/stack/01-public-website/apply.tfplan"
#          if-no-files-found: error
#          retention-days: 1
#
#  terraform-apply:
#    name: 'Terraform Apply'
#    runs-on: ubuntu-latest
#    needs: terraform-plan
#    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#    environment:
#      name: tf_apply
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@master
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@master
#        with:
#          aws-region: eu-west-1
#          role-to-assume: arn:aws:iam::166486374934:role/github-eu-west-1-prod
#
#      - name: Download TF Plan
#        uses: actions/download-artifact@v2
#        with:
#          name: tf_plan
#          path: "${GITHUB_WORKSPACE}/terraform/infrastructure/aws/166486374934/stack/01-public-website/apply.tfplan"
#
#      - name: Terraform Apply
#        run: |
#          "${GITHUB_WORKSPACE}/terraform/infrastructure/aws/terraform.sh 166486374934 prod "eu-west-1" 01-public-website apply"
#
#  slack_notification:
#    name: 'Slack Notification'
#    runs-on: ubuntu-latest
#    needs: [terraform-plan, terraform-apply]
#    if: always()
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Apply Slack Notification
#        uses: rtCamp/action-slack-notify@v2
#        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#        env:
#          SLACK_CHANNEL: devops-ninjas
#          SLACK_COLOR: ${{ needs.terraform-apply.result }}
#          SLACK_TITLE: ${{ github.repository }}
#          SLACK_MESSAGE: ${{ github.event.head_commit.message }}
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_FOOTER: 'Terraform Github Actions Main Branch Alert'
#
#      - name: Plan Slack Notification
#        uses: rtCamp/action-slack-notify@v2
#        if: github.ref != 'refs/heads/main' && github.event_name == 'push'
#        env:
#          SLACK_CHANNEL: devops-ninjas
#          SLACK_COLOR: ${{ needs.terraform-plan.result }}
#          SLACK_TITLE: ${{ github.repository }}
#          SLACK_MESSAGE: ${{ github.event.head_commit.message }}
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_FOOTER: 'Terraform Github Actions Feature Branch Push Alert'
